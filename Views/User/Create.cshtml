@model CRUD_for_signup_using_MVC.Models.User

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">
        <strong>Error ! </strong>@TempData["ErrorMessage"]
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span>&times;</span>
        </button>
    </div>
}


@using (Html.BeginForm("Create", "User", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Sign up</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.first_name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.first_name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.first_name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.last_name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.last_name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.last_name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.date_of_birth, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.date_of_birth, new { htmlAttributes = new { @class = "form-control", max = new DateTime(20, 12, 31).ToString("yyyy-MM-dd") } })
            @Html.ValidationMessageFor(model => model.date_of_birth, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group">
        @Html.LabelFor(model => model.gender, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.RadioButtonFor(model => model.gender, "M")
            @Html.Label("Male")
            @Html.RadioButtonFor(model => model.gender, "F")
            @Html.Label("Female")

            @Html.RadioButtonFor(model => model.gender, "O")
            @Html.Label("Other")

            @Html.ValidationMessageFor(model => model.gender, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group">
        @Html.LabelFor(model => model.phone_number, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.phone_number, new { htmlAttributes = new { @class = "form-control", type = "number" } } )
            @Html.ValidationMessageFor(model => model.phone_number, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.email_address, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.email_address, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.email_address, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.address, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.address, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.state, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.state, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.state, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.city, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.city, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.city, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.username, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.username, new { htmlAttributes = new { @class = "form-control" } })

            @Html.ValidationMessageFor(model => model.username, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.password, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control", id = "password" } })
            @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Confirm Password", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.Password("confirmPassword", null, new { @class = "form-control", id = "confirmPassword", onblur = "validatePassword();" })
            @Html.ValidationMessageFor(model => model.confirmPassword, "", new { @class = "text-danger" })

            <span id="passwordMatchError" class="text-danger"></span>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.profile_photo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" name="file" />
            @Html.ValidationMessageFor(model => model.profile_photo, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        <p></p>
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Sign up" class="btn btn-primary" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section Scripts {

    <script src="~/Scripts/CustomJS/AutoHideAlert.js"></script>

    @Scripts.Render("~/bundles/jqueryval")
}
